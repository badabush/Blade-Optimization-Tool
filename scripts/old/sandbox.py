"""
Sandbox to test things
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from scipy.optimize import curve_fit


# curve fit
def curvefit(y, a, b, c, d):
    return a * y ** 3 + b * y ** 2 + c * y + d


def foo1():
    coarse = np.array([0.0, 0.0002, 0.0005, 0.001,
                       0.0015, 0.002, 0.005, 0.01, 0.015, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08, 0.10, 0.12,
                       0.14, 0.16, 0.18, 0.20, 0.22, 0.24, 0.26, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40,
                       0.42, 0.44, 0.46, 0.48, 0.50, 0.52, 0.54, 0.56, 0.58, 0.60, 0.62, 0.64, 0.66, 0.68,
                       0.70, 0.72, 0.74, 0.76, 0.78, 0.80, 0.82, 0.84, 0.86, 0.88, 0.90, 0.92, 0.94, 0.96,
                       0.97, 0.98, 0.99, 0.995, 1.0])
    fine = np.array([0.0, 0.00005, 0.0001, 0.0002,
                     0.0003, 0.0004, 0.0005, 0.0006, 0.0008, 0.0010, 0.0012, 0.0014, 0.0016,
                     0.0018, 0.002, 0.0025, 0.003, 0.0035, 0.004, 0.0045, 0.005, 0.006, 0.007, 0.008,
                     0.009, 0.01, 0.011, 0.012, 0.013, 0.014, 0.015, 0.016, 0.018, 0.02, 0.025, 0.03,
                     0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.07, 0.08, 0.09, 0.10, 0.12,
                     0.14, 0.16, 0.18, 0.20, 0.22, 0.24, 0.26, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40,
                     0.42, 0.44, 0.46, 0.48, 0.50, 0.52, 0.54, 0.56, 0.58, 0.60, 0.62, 0.64, 0.66, 0.68,
                     0.70, 0.72, 0.74, 0.76, 0.78, 0.80, 0.82, 0.84, 0.86, 0.88, 0.90, 0.92, 0.94, 0.95,
                     0.96, 0.97, 0.975, 0.98, 0.985, 0.99, 0.995, 0.999, 1.0])

    y = np.linspace(0, 1, 98)
    params = curve_fit(curvefit, fine, y)
    x2 = np.linspace(0, 1, 98)
    a = params[0][0]
    b = params[0][1]
    c = params[0][2]
    d = params[0][3]

    beta = np.linspace(0, np.pi, 98)
    x3 = (1 - np.cos(beta)) / 2

    plt.figure()
    # plt.plot(coarse, 'k')
    plt.plot(fine, y, 'r')
    plt.plot(y, curvefit(x2, a, b, c, d))
    plt.show()


def foo2():
    bar = np.arange(0, 10)
    bar_rev = bar[::-1]
    0


def foo3():
    x = [0.000000, 0.005000, 0.007500, 0.012500, 0.025000, 0.050000, 0.075000, 0.100000, 0.150000, 0.200000, 0.250000, 0.300000, 0.350000, 0.400000, 0.450000, 0.500000, 0.550000, 0.600000, 0.650000, 0.700000, 0.750000, 0.800000, 0.850000, 0.900000, 0.950000, 1.000000, 0.000000, 0.005000, 0.007500, 0.012500, 0.025000, 0.050000, 0.075000, 0.100000, 0.150000, 0.200000, 0.250000, 0.300000, 0.350000, 0.400000, 0.450000, 0.500000, 0.550000, 0.600000, 0.650000, 0.700000, 0.750000, 0.800000, 0.850000, 0.900000, 0.950000, 1.000000]
    y = [0.000000, 0.014909, 0.018057, 0.022805, 0.031550, 0.044755, 0.054980, 0.063493, 0.077005, 0.087216, 0.094880, 0.100344, 0.103740, 0.105025, 0.103711, 0.099609, 0.092823, 0.083992, 0.073699, 0.062331, 0.050374, 0.038165, 0.026181, 0.015056, 0.005655, -0.000000, 0.000000, -0.014909, -0.018057, -0.022805, -0.031550, -0.044755, -0.054980, -0.063493, -0.077005, -0.087216, -0.094880, -0.100344, -0.103740, -0.105025, -0.103711, -0.099609, -0.092823, -0.083992, -0.073699, -0.062331, -0.050374, -0.038165, -0.026181, -0.015056, -0.005655, 0.000000]
    plt.plot(x, y)
    plt.axis('equal')
    plt.show()
    0


if __name__ == '__main__':
    foo3()
